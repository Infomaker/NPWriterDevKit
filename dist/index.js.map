{"version":3,"sources":["webpack:///webpack/bootstrap 996653a162fb2104c810","webpack:///./plugins/index.js","webpack:///./plugins/se.infomaker.npwriterdevkit/index.js","webpack:///./plugins/se.infomaker.npwriterdevkit/DevKitPackage.js","webpack:///./plugins/se.infomaker.npwriterdevkit/scss/index.scss","webpack:///./plugins/se.infomaker.npwriterdevkit/DevKitComponent.js","webpack:///external \"substance\"","webpack:///external \"writer\""],"names":["console","error","Validation","constructor","args","validate","log","name","id","configure","config","addValidator","addComponentToSidebarWithTabId","DevKitComponent","dispose","getInitialState","clickCount","fetchUrl","urlToFetch","router","get","url","then","response","context","api","checkForOKStatus","json","catch","e","render","$$","el","addClass","append","getLabel","String","state","button","on","setState"],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;ACtCA;;;;;;AAEA,EAAC,MAAM;AACH;AACH,EAFD,I;;;;;;;;;;;;ACFA;;;;AACA;;;;mBAEe,MAAM;AACjB,iCAAoB;AAChB;AACH,MAFD,MAEO;AACHA,iBAAQC,KAAR,CAAc,mCAAd;AACH;AACJ,E;;;;;;;;;;;;ACTD;;AAEA;;;;AACA;;;;AAEA,OAAMC,UAAN,2BAAmC;;AAE/BC,iBAAY,GAAGC,IAAf,EAAqB;AACjB,eAAM,GAAGA,IAAT;AACH;;AAEDC,gBAAW;AACPL,iBAAQM,GAAR,CAAY,YAAZ;AACH;AAR8B;;mBAYpB;AACXC,WAAM,gBADK;AAEXC,SAAI,6BAFO;AAGXC,gBAAW,mBAAUC,MAAV,EAAkB;AACzBA,gBAAOC,YAAP,CAAoBT,UAApB;AACAQ,gBAAOE,8BAAP,CAAsC,KAAKJ,EAA3C,EAA+C,MAA/C;AACH;AANU,E;;;;;;ACjBf,0C;;;;;;;;;;;;;;;ACAA;;AACA;;AAGA,OAAMK,eAAN,8BAAwC;;AAEpC;;;AAGAC,eAAU,CAET;AADG;;;AAGJ;;;;AAIAX,iBAAY,GAAGC,IAAf,EAAqB;AACjB,eAAM,GAAGA,IAAT;AACH;;AAGD;;;;AAIAW,uBAAkB;AACd,gBAAO;AACHC,yBAAY;AADT,UAAP;AAGH;;AAEDC,gBAAW;AACP,eAAMC,aAAa,yDAAnB;;AAEA,qBAAIC,MAAJ,CAAWC,GAAX,CAAe,aAAf,EAA8B,EAACC,KAAKH,UAAN,EAA9B,EACKI,IADL,CACUC,YAAY,KAAKC,OAAL,CAAaC,GAAb,CAAiBN,MAAjB,CAAwBO,gBAAxB,CAAyCH,QAAzC,CADtB,EAEKD,IAFL,CAEUC,YAAYA,SAASI,IAAT,EAFtB,EAGKL,IAHL,CAGUK,QAAQ;AACV3B,qBAAQM,GAAR,CAAY,aAAZ,EAA2BqB,IAA3B;AACH,UALL,EAMKC,KANL,CAMYC,CAAD,IAAO;AACV7B,qBAAQC,KAAR,CAAc4B,CAAd;AACH,UARL;AASH;;AAED;;;;;AAKAC,YAAOC,EAAP,EAAW;AACP,eAAMC,KAAKD,GAAG,KAAH,EAAUE,QAAV,CAAmB,QAAnB,CAAX;;AAEAD,YAAGE,MAAH,CAAUH,GAAG,IAAH,EAASG,MAAT,CAAgB,KAAKC,QAAL,CAAc,sBAAd,CAAhB,CAAV;AACAH,YAAGE,MAAH,CAAUH,GAAG,GAAH,EAAQG,MAAR,CAAeE,OAAO,KAAKC,KAAL,CAAWrB,UAAlB,CAAf,CAAV;;AAEA,aAAIA,aAAa,KAAKqB,KAAL,CAAWrB,UAA5B;;AAEA,aAAIsB,SAASP,GAAG,QAAH,EAAaQ,EAAb,CAAgB,OAAhB,EAAyB,MAAM;AACxC,kBAAKC,QAAL,CAAc;AACVxB,6BAAYA,aAAW;AADb,cAAd;AAGH,UAJY,EAIVkB,MAJU,CAIH,UAJG,CAAb;;AAMAF,YAAGE,MAAH,CAAUI,MAAV;;AAEA,gBAAON,EAAP;AACH;AAhEmC;mBAkEzBnB,e;;;;;;ACtEf,4B;;;;;;ACAA,yB","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 996653a162fb2104c810","import DevKit from './se.infomaker.npwriterdevkit/index'\n\n(() => {\n    DevKit()\n})()\n\n\n// WEBPACK FOOTER //\n// ./plugins/index.js","import DevkitPackage from './DevKitPackage'\nimport {registerPlugin} from 'writer'\n\nexport default () => {\n    if (registerPlugin) {\n        registerPlugin(DevkitPackage)\n    } else {\n        console.error(\"Register method not yet available\");\n    }\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./plugins/se.infomaker.npwriterdevkit/index.js","import './scss/index.scss'\n\nimport DevKitComponent from './DevKitComponent'\nimport {Validator} from 'writer'\n\nclass Validation extends Validator {\n\n    constructor(...args) {\n        super(...args)\n    }\n\n    validate() {\n        console.log(\"Validation\");\n    }\n}\n\n\nexport default {\n    name: 'npwriterdevkit',\n    id: 'se.infomaker.npwriterdevkit',\n    configure: function (config) {\n        config.addValidator(Validation)\n        config.addComponentToSidebarWithTabId(this.id, 'main', DevKitComponent)\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./plugins/se.infomaker.npwriterdevkit/DevKitPackage.js","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./plugins/se.infomaker.npwriterdevkit/scss/index.scss\n// module id = 3\n// module chunks = 0","import {Component} from 'substance'\nimport {api} from 'writer'\n\n\nclass DevKitComponent extends Component {\n\n    /**\n     * Method called when component is disposed and removed from DOM\n     */\n    dispose() {\n        // Perfect place to remove eventlisteners etc\n    }\n\n    /**\n     * Constructor\n     * @param args\n     */\n    constructor(...args) {\n        super(...args)\n    }\n\n\n    /**\n     *\n     * @returns {{clickCount: number}}\n     */\n    getInitialState() {\n        return {\n            clickCount: 0\n        }\n    }\n\n    fetchUrl() {\n        const urlToFetch = 'http://api.krisinformation.se/v1/capmessage?format=json'\n\n        api.router.get('/api/proxy/', {url: urlToFetch})\n            .then(response => this.context.api.router.checkForOKStatus(response))\n            .then(response => response.json())\n            .then(json => {\n                console.log(\"Response is\", json)\n            })\n            .catch((e) => {\n                console.error(e)\n            })\n    }\n\n    /**\n     * Render method is called whenever there's a change in state or props\n     * @param $$\n     * @returns {*}\n     */\n    render($$) {\n        const el = $$('div').addClass('devkit')\n\n        el.append($$('h2').append(this.getLabel('Devkit plugin loaded')))\n        el.append($$('p').append(String(this.state.clickCount)))\n\n        let clickCount = this.state.clickCount\n\n        let button = $$('button').on('click', () => {\n            this.setState({\n                clickCount: clickCount+1\n            })\n        }).append('Click me')\n\n        el.append(button)\n\n        return el\n    }\n}\nexport default DevKitComponent\n\n\n// WEBPACK FOOTER //\n// ./plugins/se.infomaker.npwriterdevkit/DevKitComponent.js","module.exports = substance;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"substance\"\n// module id = 8\n// module chunks = 0","module.exports = writer;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"writer\"\n// module id = 9\n// module chunks = 0"],"sourceRoot":""}